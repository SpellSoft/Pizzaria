<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menuProduto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACuAAAAxgAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6AAAA/wAAAP8AAADeAAAAhAAA
        ACYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABYAAAA/AAAAPYAAAD2AAAA/wAAAPIAAACmAAAAPgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAA2gAA
        APoAAAA2AAAAegAAANYAAAD/AAAA/wAAAM4AAABgAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAegAAAP8AAACaAAAAQgAAABQAAABWAAAAwAAA
        APwAAAD8AAAA4AAAAIYAAAAiAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIAAAAO4AAAD/AAAA/AAAAG4AAAAAAAAAPgAAAPgAAAD/AAAA/wAAAP8AAADwAAAApgAA
        ADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwAAAD/AAAA/wAA
        AHYAAAAAAAAAfAAAAP8AAAD/AAAA+AAAAJoAAADcAAAA/wAAAP8AAADIAAAAYAAAABAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAAD8AAAA4AAAABAAAAAAAAAAOgAAAO4AAAD/AAAAvgAA
        AAgAAAAQAAAAdgAAAPoAAAD/AAAA/AAAAOAAAACCAAAAJAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADEAAAA+AAAAEIAAAAAAAAAAAAAACgAAABMAAAAEgAAAAAAAAACAAAAwAAAAP8AAAD/AAAA7gAA
        APYAAAD/AAAA8AAAAKoAAABAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABWAAAA/AAAAK4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMAAAA4gAAAP8AAAD/AAAAoAAAABgAAACEAAAA5AAAAP8AAAD/AAAA3AAA
        AHgAAAAAAAAAAAAAAAAAAAAMAAAA2AAAAPoAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAA
        APoAAAD/AAAAaAAAAAAAAAACAAAAqgAAAP8AAAD/AAAA/wAAAM4AAAAAAAAAAAAAAAAAAAAAAAAAegAA
        AP8AAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAOwAAAD/AAAAogAAAAAAAAAwAAAA8gAA
        AP8AAAD/AAAA/wAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAOoAAADmAAAAjAAAAOIAAADQAAAARAAA
        AAAAAAAAAAAABgAAAJQAAADYAAAATAAAAAIAAAC6AAAA/wAAAP8AAAD/AAAA5gAAABgAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAJoAAAD/AAAA/wAAAP8AAAD/AAAA3AAAABAAAAAAAAAAAAAAAAQAAAAMAAAAAgAA
        AGgAAAD/AAAA/wAAAP8AAAD/AAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAD/AAAA/wAA
        AP8AAAD/AAAA8gAAACgAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAO4AAAD/AAAA/wAAAP8AAADsAAAAIgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAAA/wAAAP8AAAD/AAAAwAAAAAYAAAAAAAAAAAAA
        AAAAAAAwAAAA5AAAAP8AAAD/AAAA/wAAAP8AAAB6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABUAAAA/AAAAPIAAACGAAAAGgAAAAAAAAAAAAAAAAAAADoAAADkAAAA/wAAAP8AAAD/AAAA/wAA
        AM4AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAA2AAAAPoAAAAkAAAAAAAA
        AAAAAAAEAAAAagAAAO4AAAD/AAAA/wAAAP8AAAD/AAAA7AAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAP8AAACQAAAAAgAAADQAAADAAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADwAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAA
        AOwAAADoAAAArgAAAPQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOwAAABIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAJ4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA0AAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPIAAACEAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAADQAAAA/wAA
        AP8AAADwAAAApAAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAAAA0gAAAIAAAAAmAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///8AB///AIH//wCYf/8Azg//AMcD/wDHAP8A5xwfAOf4
        BwDz+EEA8/zgAPn8YQD4PMEA+B/BAPwfgwD8HwcA/j4HAP58DwD/MB8A/wA/AP8AfwD/gP8A/4P/AP/P
        /wA=
</value>
  </data>
</root>